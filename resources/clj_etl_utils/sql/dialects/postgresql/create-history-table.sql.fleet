--
-- Generated History Table from params: <(str params)>
--

SET statement_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = off;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET escape_string_warning = off;

SET search_path = public, pg_catalog;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: h_<(:table-name params)>_id_seq; Type: SEQUENCE; Schema: public; Owner: <(:owner params)>
--

CREATE SEQUENCE h_<(:table-name params)>_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


CREATE TABLE h_<(:table-name params)> (
       id bigint primary key DEFAULT nextval('<(:table-name params)>_id_seq'),
       created_at timestamp without time zone,
       updated_at timestamp without time zone,
       action character varying (10),
       h_id bigint NOT NULL,
       h_created_at timestamp without time zone,
       h_updated_at timestamp without time zone,
<(clojure.contrib.string/join ",\n"
         (map (fn [col-info] (format "       h_%s %s%s"
                                 (.toLowerCase #^String (rn.db/sqlize-col-name (:name col-info)))
                                 (:type col-info)
                                 (if (:length col-info)
                                   (format " (%s)" (:length col-info))
                                   "")))
               (filter :name (:columns params))))>
);

ALTER TABLE public.h_<(:table-name params)> OWNER TO <(:owner params)>;

ALTER TABLE public.h_<(:table-name params)>_id_seq OWNER TO <(:owner params)>;

--
-- Name: h_<(:table-name params)>_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: <(:owner params)>
--

ALTER SEQUENCE h_<(:table-name params)>_id_seq OWNED BY h_<(:table-name params)>.id;




