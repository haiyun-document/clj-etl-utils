--
-- Generated Table from params: <(str params)>
--

SET statement_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = off;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET escape_string_warning = off;

SET search_path = public, pg_catalog;

SET default_tablespace = '';

SET default_with_oids = false;



CREATE TABLE <(:table-name params)> (
       id bigint primary key,
       created_at timestamp without time zone,
       updated_at timestamp without time zone,
<(clojure.contrib.string/join ",\n"
  (concat
          (map (fn [col-info] (format "       %s %s%s%s"
                                 (.toLowerCase #^String (:name col-info))
                                 (:type col-info)
                                 (if (:length col-info)
                                   (format " (%s)" (:length col-info))
                                   "")
                                 (if (:not-null col-info)
                                     " NOT NULL"
                                     "")))
               (filter :name (:columns params)))
          (map
              (fn [constraint-info]
                (format "       CONSTRAINT %s" (:constraint constraint-info)))
              (filter :constraint (:columns params)))))>
);

ALTER TABLE public.<(:table-name params)> OWNER TO <(:owner params)>;

--
-- Name: <(:table-name params)>_id_seq; Type: SEQUENCE; Schema: public; Owner: <(:owner params)>
--

CREATE SEQUENCE <(:table-name params)>_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

ALTER TABLE public.<(:table-name params)>_id_seq OWNER TO <(:owner params)>;

--
-- Name: <(:table-name params)>_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: <(:owner params)>
--

ALTER SEQUENCE <(:table-name params)>_id_seq OWNED BY <(:table-name params)>.id;




